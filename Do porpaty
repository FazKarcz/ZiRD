CREATE TABLE JOBS (
    job_id INT NOT NULL,
    job_title VARCHAR2(35),
    min_salary FLOAT CHECK (min_salary < max_salary AND min_salary >= 2000),
    max_salary FLOAT
    );

CREATE TABLE EMPLOYESS (
    employee_id INT NOT NULL,
    first_name VARCHAR(20),
    last_name VARCHAR(20),
    email VARCHAR(35),
    phone_number VARCHAR(15),
    hire_date DATE,
    job_id INTEGER NOT NULL,
    salary FLOAT,
    comimission_pct INT,
    manager_id INT NOT NULL,
    departament_id INT NOT NULL,
    CONSTRAINT pk_employess PRIMARY KEY (employee_id)
);

CREATE TABLE JOB_HISTORY(
    employee_id INT NOT NULL,
    start_date DATE,
    end_date DATE,
    job_id INT NOT NULL,
    department_id INT NOT NULL,
    CONSTRAINT fk_job_history_job FOREIGN KEY (job_id) REFERENCES JOBS (job_id),
    CONSTRAINT fk_job_history_depa FOREIGN KEY (department_id) REFERENCES DEPARTMENTS (departments_id),
    CONSTRAINT fk__job_history_employess FOREIGN KEY (employee_id) REFERENCES EMPLOYESS (employess_id)
    );

CREATE TABLE DEPARTMENTS(
    department_id INT NOT NULL,
    department_name VARCHAR(255),
    manager_id INT NOT NULL,
    location_id INT NOT NULL,
    CONSTRAINT pk_departments PRIMARY KEY (department_id),
    CONSTRAINT fk_department_manager FOREIGN KEY (manager_id) REFERENCES EMPLOYESS (employee_id),
    CONSTRAINT fk_department_location FOREIGN KEY (location_id) REFERENCES LOCATIONS (location_id)
);

CREATE TABLE REGIONS (
    region_id INT NOT NULL,
    region_name VARCHAR(35),
    CONSTRAINT pk_regions PRIMARY KEY (region_id)
    );
    
CREATE TABLE COUNTRIES (
    country_id INT NOT NULL,
    country_name VARCHAR(35),
    region_id INT,
    CONSTRAINT pk_country PRIMARY KEY (country_id),
    CONSTRAINT fk_country_region FOREIGN KEY (region_id) REFERENCES REGIONS (region_id)
    );

CREATE TABLE LOCATIONS (
    location_id INT NOT NULL,
    street_address VARCHAR(50),
    postal_code VARCHAR(12),
    city VARCHAR (20),
    state_province VARCHAR(20),
    CONSTRAINT pk_location PRIMARY KEY (location_id),
    CONSTRAINT fk_location_region FOREIGN KEY (country_id) REFERENCES COUNTRIES (country_id)
    )
    
