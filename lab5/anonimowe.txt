Zad 1/2:
DECLARE
  numer_max departments.department_id%TYPE;
  nowy_numer departments.department_id%TYPE;
  nowa_nazwa departments.department_name%TYPE := 'EDUCATION';
BEGIN
  SELECT MAX(department_id) INTO numer_max FROM departments;
  nowy_numer := numer_max + 10;
  INSERT INTO departments (department_id, department_name) 
  VALUES (nowy_numer, nowa_nazwa);

  UPDATE departments 
  SET location_id = 3000 
  WHERE department_id = nowy_numer;

  DBMS_OUTPUT.PUT_LINE('Dodano departament nr ' || nowy_numer || ' o nazwie ' || nowa_nazwa);
END;
/

Zad 3
CREATE TABLE nowa (
  wartosc VARCHAR2(10)
);

BEGIN
  FOR i IN 1..10 LOOP
    IF i NOT IN (4, 6) THEN
      INSERT INTO nowa (wartosc) VALUES (TO_CHAR(i));
    END IF;
  END LOOP;

  DBMS_OUTPUT.PUT_LINE('Wstawiono liczby 1-10 bez 4 i 6.');
END;
/

Zad 4
DECLARE
  kraj countries%ROWTYPE;
BEGIN
  SELECT * INTO kraj
  FROM countries
  WHERE country_id = 'CA';

  DBMS_OUTPUT.PUT_LINE('Kraj: ' || kraj.country_name);
  DBMS_OUTPUT.PUT_LINE('Region ID: ' || kraj.region_id);
END;
/

Zad 5

DECLARE
  CURSOR pracownicy_cursor IS
    SELECT last_name, salary 
    FROM employees
    WHERE department_id = 50;

  v_nazwisko employees.last_name%TYPE;
  v_pensja employees.salary%TYPE;
BEGIN
  OPEN pracownicy_cursor;
  LOOP
    FETCH pracownicy_cursor INTO v_nazwisko, v_pensja;
    EXIT WHEN pracownicy_cursor%NOTFOUND;

    IF v_pensja > 3100 THEN
      DBMS_OUTPUT.PUT_LINE(v_nazwisko || ': nie dawać podwyżki');
    ELSE
      DBMS_OUTPUT.PUT_LINE(v_nazwisko || ': dać podwyżkę');
    END IF;
  END LOOP;
  CLOSE pracownicy_cursor;
END;
/

Zad 6


